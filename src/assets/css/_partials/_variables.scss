// Functions

@function tint($color, $percent)  { @return mix(#fff, $color, $percent); }
@function shade($color, $percent) { @return mix(#000, $color, $percent); }

// Variables

$type-xs:   14;
$type-s:    16;
$type-m:    18;
$type-ml:   20;
$type-l:    22;
$type-xl:   24;
$type-xxl:  30;
$type-xxxl: 36;

$type-sans:  "proxima-nova-soft", sans-serif;
$type-serif: "bookmania", serif;
$type-mono:  monospace;

$color-highlight: #9b59b6;

// $color-highlight Tints & Shades
$color-highlight-dark:   shade($color-highlight,12.5%);
$color-highlight-ish:     tint($color-highlight,25%);
$color-highlight-mid:     tint($color-highlight,50%);
$color-highlight-light:   tint($color-highlight,75%);
$color-highlight-ghost:   tint($color-highlight,90%);
$color-highlight-vapor:   tint($color-highlight,97.5%);

$color-base: #7C7380;

// $color-base Tints & Shades
$color-base-dark:   shade($color-base,10%);
$color-base-ish:     tint($color-base,25%);
$color-base-mid:     tint($color-base,50%);
$color-base-light:   tint($color-base,75%);
$color-base-ghost:   tint($color-base,87.5%);
$color-base-vapor:   tint($color-base,97.5%);

$color-bg: #FFF;

$space-xs: 0.375rem;
$space-s:  0.75rem;
$space-m:  1.5rem;
$space-l:  3rem;
$space-xl: 4.5rem;

$grid-1-6: percentage(1/6);
$grid-1-4: percentage(1/4);
$grid-1-3: percentage(1/3);
$grid-1-2: percentage(1/2);
$grid-2-3: percentage(2/3);
$grid-3-4: percentage(3/4);

$border: 0.0625rem solid;
$border-big: 0.1875rem solid;

// Mixins

@mixin bp($point) {
	@if      $point == xs  { @media (min-width: 1em) and (max-width: 46em) { @content; } }
	@else if $point == xsl { @media (min-width: 27.5em)  { @content; } }
	@else if $point == s   { @media (min-width: 47em)  { @content; } }
	@else if $point == m   { @media (min-width: 63em)  { @content; } }
	@else if $point == l   { @media (min-width: 79em)  { @content; } }
	@else if $point == ml  { @media (min-width: 89em)  { @content; } }
	@else if $point == xl  { @media (min-width: 99em)  { @content; } }
	@else if $point == xxl { @media (min-width: 101em) { @content; } }
}

@mixin wrapper {
  max-width: 60em;
	margin: 0 auto;
	padding: $space-m;
	@include bp(ml)  { max-width: 75em; padding: $space-l; }
	@include bp(xxl) { max-width: 85em; padding: $space-xl; }
}
@mixin wrapper-short {
  max-width: 60em;
	margin: 0 auto;
	padding: $space-s $space-m;
  @include bp(ml)  { max-width: 75em; }
	@include bp(xxl) { max-width: 85em; }
}
@mixin wrapper-bleed {
	padding: $space-m;
	@include bp(xxl) {
    	padding: $space-l;
  }
}

@mixin left { float: left; }

@mixin right { float: right; }

@mixin spacer {
  padding: $space-s;
  @include bp(ml) { padding: $space-m; }
}
@mixin spacer-vert {
  padding: $space-s 0;
  @include bp(ml) { padding: $space-m 0; }
}

@mixin oomph {
  margin-top: $space-s;
  @include bp(ml) { margin-top: $space-m; }
}

@mixin oomph-small {
  margin-top: $space-xs;
  @include bp(ml) { margin-top: $space-s; }
}

@mixin oomph-big {
  margin-top: $space-m;
  @include bp(xl) { margin-top: $space-l; }
}

@mixin type($px,$lh: 1.5) {
  font-size: ($px/16)+rem;
  line-height: ($lh*24)/($px);
}

@mixin type-xs {
	@include type($type-xs,1);
	@include bp(xs) { @include type($type-xs,0.75); }
	@include bp(xl) { @include type($type-s,1); }
}
@mixin type-s {
	@include type($type-s,1);
	@include bp(xs) { @include type($type-xs,1); }
	@include bp(xl) { @include type($type-m); }
}
@mixin type-m	 {
  @include type($type-m);
  @include bp(xs) { @include type($type-s,1); }
  @include bp(xl) { @include type($type-ml); }
}
@mixin type-ml	 {
  @include type($type-ml,1);
  @include bp(xs) { @include type($type-m,1); }
  @include bp(xl) { @include type($type-l,1); }
}
@mixin type-l {
	@include type($type-l,1);
	@include bp(xl) { @include type($type-xl,1); }
}
@mixin type-xl {
	@include type($type-xl);
	@include bp(xs) { @include type($type-l,1); }
	@include bp(xl) { @include type($type-xxl); }
}
@mixin type-xxl {
	@include type($type-xxl);
	@include bp(xs) { @include type-xl; }
	@include bp(xl) { @include type($type-xxxl); }
}
	
@mixin type-sans { font-family: $type-sans; }

@mixin type-serif { font-family: $type-serif; }

@mixin type-mono { font-family: $type-mono; }

@mixin bold { font-weight: bold; }

@mixin italic { font-style: italic; }

@mixin all-caps {
  text-transform: uppercase;
  letter-spacing: -0.03125rem;
}

@mixin type-center { text-align: center; }

@mixin type-left { text-align: left; }

@mixin type-right { text-align: right; }

@mixin type-legible {
  @include bp(s)  { max-width: 87.5%; }
  @include bp(l)  { max-width: 75%; }
  @include bp(xl) { max-width: 62.5%; }
}

@mixin ot-lig {
  font-variant-ligatures: common-ligatures;
  -moz-font-feature-settings: "liga", "clig";
  -ms-font-feature-settings: "liga", "clig";
  -webkit-font-feature-settings: "liga", "clig";
  font-feature-settings: "liga", "clig";
}

@mixin ot-lig-contexual {
  font-variant-ligatures: contextual;
  -moz-font-feature-settings: "calt";
  -ms-font-feature-settings: "calt";
  -webkit-font-feature-settings: "calt";
  font-feature-settings: "calt";
}

@mixin ot-swash {
  -moz-font-feature-settings: "swsh";
  -ms-font-feature-settings: "swsh";
  -webkit-font-feature-settings: "swsh";
  font-feature-settings: "swsh";
}

@mixin ot-small {
  font-variant-caps: all-small-caps;
  -moz-font-feature-settings: "c2sc", "smcp";
  -ms-font-feature-settings: "c2sc", "smcp";
  -webkit-font-feature-settings: "c2sc", "smcp";
  font-feature-settings: "c2sc", "smcp";
}

@mixin smooth { transition: all 0.375s ease-in; }
@mixin smooth-fast { transition: all 0.1875s ease-in; }
@mixin smooth-pop { transition: all 0.625s cubic-bezier(0.5, 0.1, 0, 1.2); }

@mixin inline {
  width: auto;
  display: inline-block;
  margin-left: 0;
  margin-right: $space-s - 0.1875rem;
  @include bp(ml) { margin-right: $space-m - 0.1875rem; }
}

@mixin btn {
  @include type-sans;
  @include all-caps;
  font-weight: 600;
  background-color: $color-highlight;
  border: $border $color-highlight;
  color: $color-bg;
  padding: $space-xs;
  padding-bottom: $space-xs/2;
  @include inline;
  @include smooth;
  border-radius: $space-xs;
  @include bp(xs) { margin: $space-xs; }
  @include bp(s) { padding: $space-s; }
  @include bp(xl) { padding: $space-xs $space-s; }
  &:hover {
    background-color: $color-highlight-dark;
    color: $color-bg;
  }
  &.btn--secondary {
    background-color: $color-bg;
    color: $color-base-ish;
    border-color: $color-base-ghost;
    &:hover { color: $color-highlight; }
  }
}

@mixin icon {
  @include type-s;
  svg {
    margin-left: $space-xs/2;
    position: relative;
    max-height: $space-s + ($space-xs/2);
    top: $space-xs/4;
    @include bp(s) {
      max-height: $space-s + $space-xs;
      top: $space-xs/2;
    }
    path { fill: currentColor; }
  }
}

@mixin fill {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}